{
  "flows": [
    {
      "companyId": "a7b8a85c-34e2-414c-9524-b3eb8b45b0f5",
      "authTokenExpireIds": [],
      "connectorIds": [
        "variablesConnector",
        "functionsConnector",
        "pingOneSSOConnector",
        "errorConnector",
        "flowConnector",
        "annotationConnector",
        "httpConnector"
      ],
      "createdDate": 1727453643501,
      "currentVersion": 106,
      "customerId": "e0217666584e370d39d052df8a349869",
      "description": "Demo sign on flow integrating real-time password checks against known breaches.",
      "flowStatus": "enabled",
      "isOutputSchemaSaved": false,
      "name": "Ping YOUniverse - Sign On Demo",
      "publishedVersion": 106,
      "settings": {
        "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
        "intermediateLoadingScreenCSS": "",
        "intermediateLoadingScreenHTML": "",
        "logLevel": 3,
        "useCustomCSS": true,
        "css": ".fs-17 {\r\n    font-size: 17px;\r\n}\r\n\r\n.title {\r\n    font-size: 20px;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.css-jd11dm {\r\n    padding: 15px 30px 50px 30px !important;\r\n}\r\n\r\nbody, .page {\r\n  background-color: #ededed !important;\r\n}\r\n\r\n.buttonLink {\r\n  background: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #2996cc;\r\n  font-size: 15px;\r\n}\r\n\r\n.link-text {\r\n    background-color: transparent !important;\r\n    border: none;\r\n}\r\n.link-text:hover {\r\n    background-color: transparent !important;\r\n    text-decoration: underline;\r\n}\r\n.left-text-block {\r\n    text-align:left !important\r\n}\r\nbutton.tile-button--side-icon div {\r\n    display: inherit !important;\r\n}\r\n.text-left-to-icon {\r\n    margin-left: 0.5em;\r\n    vertical-align: super;\r\n}\r\n.field-message {\r\n    font-size: 15px;\r\n    min-width: auto;\r\n}\r\n\r\n.page{\r\n  margin-top: 30px;\r\n}\r\n\r\n.field-message {\r\n    font-size: 13px;\r\n    min-width: auto;\r\n}",
        "useCustomScript": true,
        "jsLinks": [
          {
            "label": "https://cdnjs.cloudflare.com/ajax/libs/qrcode-generator/1.4.4/qrcode.min.js",
            "value": "https://cdnjs.cloudflare.com/ajax/libs/qrcode-generator/1.4.4/qrcode.min.js",
            "defer": "false",
            "crossorigin": "",
            "integrity": "",
            "referrerpolicy": "",
            "type": ""
          }
        ],
        "cssLinks": [
          "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
          "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.1/icons.css",
          "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.4/icons.css",
          "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
          "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.6/icons.css",
          "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
          "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.6/icons.css"
        ]
      },
      "timeouts": "null",
      "updatedDate": 1727453645873,
      "flowId": "016d8b91258f0a3921a94cb0dd9ece71",
      "versionId": 106,
      "graphData": {
        "elements": {
          "nodes": [
            {
              "data": {
                "id": "30yei94sd6",
                "nodeType": "CONNECTION",
                "connectionId": "06922a684039827499bdbdd97f49827b",
                "connectorId": "variablesConnector",
                "name": "Variables",
                "label": "Variables",
                "status": "configured",
                "capabilityName": "saveValue",
                "type": "trigger",
                "properties": {
                  "saveVariables": {
                    "value": [
                      {
                        "name": "username",
                        "key": 0.32900725244785867,
                        "label": "username (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "username"
                      }
                    ]
                  }
                }
              },
              "position": {
                "x": 531.4145440708462,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "kvn5j3wgha",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 628.0353702655456,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "s2jwc187lt",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "AEqualsMultipleB",
                "type": "trigger",
                "properties": {
                  "leftValueA": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.mh969sm1jm.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.mh969sm1jm.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "rightValueMultiple": {
                    "value": [
                      {
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"SIGNON\"\n      }\n    ]\n  }\n]",
                        "id": "v4cwh74pow"
                      }
                    ]
                  },
                  "caseSensitive": {
                    "value": false
                  }
                }
              },
              "position": {
                "x": 797.1218161062694,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "gthvahikrb",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 917.8978488496435,
                "y": 362.32809823012246
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "saz3okakg1",
                "nodeType": "CONNECTION",
                "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
                "connectorId": "pingOneSSOConnector",
                "name": "PingOne",
                "label": "PingOne",
                "status": "configured",
                "capabilityName": "checkPassword",
                "type": "action",
                "properties": {
                  "identifier": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"username\",\n        \"data\": \"{{global.variables.username}}\",\n        \"tooltip\": \"{{global.variables.username}}\",\n        \"children\": [\n          {\n            \"text\": \"username\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "matchAttribute": {
                    "value": "username"
                  },
                  "password": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"password\",\n        \"data\": \"{{local.mh969sm1jm.payload.output.password}}\",\n        \"tooltip\": \"{{local.mh969sm1jm.payload.output.password}}\",\n        \"children\": [\n          {\n            \"text\": \"password\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                }
              },
              "position": {
                "x": 1038.6738815930178,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "jx3vywz9f0",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "vr85os8gfj": {
                    "value": "allTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1159.4499143363919,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "vr85os8gfj",
                "nodeType": "CONNECTION",
                "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
                "connectorId": "errorConnector",
                "name": "Error Message",
                "label": "Error Message",
                "status": "configured",
                "capabilityName": "customErrorMessage",
                "type": "action",
                "properties": {
                  "errorMessage": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Login failed\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Login Failed"
                  }
                }
              },
              "position": {
                "x": 1376.8467732744652,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "1v5mgi6js4",
                "nodeType": "CONNECTION",
                "connectionId": "2581eb287bb1d9bd29ae9886d675f89f",
                "connectorId": "flowConnector",
                "name": "Flow Connector",
                "label": "Flow Connector",
                "status": "configured",
                "capabilityName": "startSubFlow",
                "type": "action",
                "properties": {
                  "subFlowId": {
                    "value": {
                      "label": "Subflow - Have I Been Pwned",
                      "value": "f133c8615794355e6c3e9ea7930d919a"
                    }
                  },
                  "subFlowVersionId": {
                    "value": -1
                  },
                  "password": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"password\",\n        \"data\": \"{{local.mh969sm1jm.payload.output.password}}\",\n        \"tooltip\": \"{{local.mh969sm1jm.payload.output.password}}\",\n        \"children\": [\n          {\n            \"text\": \"password\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Detect Breached Password"
                  }
                }
              },
              "position": {
                "x": 1376.8467732744652,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "17d6lzy7sa",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "z22l7u1ybq": {
                    "value": "allTriggersFalse"
                  },
                  "k4tyrw5rgv": {
                    "value": "allTriggersFalse"
                  },
                  "ma7yswbw0g": {
                    "value": "allTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1521.7780125665142,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "y42qbqdfi3",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 1835.795697699287,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ryoojrq8bc",
                "nodeType": "CONNECTION",
                "connectionId": "2581eb287bb1d9bd29ae9886d675f89f",
                "connectorId": "flowConnector",
                "name": "Flow Connector",
                "label": "Flow Connector",
                "status": "configured",
                "capabilityName": "startSubFlow",
                "type": "action",
                "properties": {
                  "subFlowId": {
                    "value": {
                      "label": "Subflow - Have I Been Pwned",
                      "value": "f133c8615794355e6c3e9ea7930d919a"
                    }
                  },
                  "subFlowVersionId": {
                    "value": -1
                  },
                  "password": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"newPassword\",\n        \"data\": \"{{local.mw112sa73u.payload.output.newPassword}}\",\n        \"tooltip\": \"{{local.mw112sa73u.payload.output.newPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"newPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Detect Breached Password"
                  }
                }
              },
              "position": {
                "x": 2294.744622124109,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ic3tdrjr7i",
                "nodeType": "EVAL",
                "properties": {
                  "9nphei31u9": {
                    "value": "allTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 2439.6758614161577,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "9nphei31u9",
                "nodeType": "CONNECTION",
                "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
                "connectorId": "errorConnector",
                "name": "Error Message",
                "label": "Error Message",
                "status": "configured",
                "capabilityName": "customErrorMessage",
                "type": "action",
                "properties": {
                  "errorMessage": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"This password has appeared in a data breach and has been seen \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"breachedCount\",\n        \"data\": \"{{local.ryoojrq8bc.payload.output.breachedCount}}\",\n        \"tooltip\": \"{{local.ryoojrq8bc.payload.output.breachedCount}}\",\n        \"children\": [\n          {\n            \"text\": \"breachedCount\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" times before. Please use a different password.\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Password Breached"
                  }
                }
              },
              "position": {
                "x": 2608.7623072568817,
                "y": 603.8801637168707
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "3428uvmhlr",
                "nodeType": "CONNECTION",
                "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
                "connectorId": "pingOneSSOConnector",
                "name": "PingOne",
                "label": "PingOne",
                "status": "configured",
                "capabilityName": "setPassword",
                "type": "action",
                "properties": {
                  "matchAttribute": {
                    "value": "username"
                  },
                  "identifier": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"username\",\n        \"data\": \"{{global.variables.username}}\",\n        \"tooltip\": \"{{global.variables.username}}\",\n        \"children\": [\n          {\n            \"text\": \"username\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "passwordValue": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"newPassword\",\n        \"data\": \"{{local.mw112sa73u.payload.output.newPassword}}\",\n        \"tooltip\": \"{{local.mw112sa73u.payload.output.newPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"newPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                }
              },
              "position": {
                "x": 2608.7623072568817,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "iq4dze9bpl",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 2729.5383400002556,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "oyl2rf5h73",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Login Credentials"
                  }
                },
                "status": "configured"
              },
              "position": {
                "x": 217.39685893807348,
                "y": 217.39685893807348
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "51t3bfh446",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Verify Credentials"
                  }
                },
                "status": "configured",
                "idUnique": "mxjg2lvndt"
              },
              "position": {
                "x": 942.0530553983184,
                "y": 217.39685893807348
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "j6c55bzu9w",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Check if password is on a known breach list"
                  },
                  "width": {
                    "value": 250
                  },
                  "height": {
                    "value": 50
                  }
                },
                "status": "configured",
                "idUnique": "gdtdrl37ne"
              },
              "position": {
                "x": 1231.9155339824163,
                "y": 217.39685893807348
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "jq9ebhxud",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Check if password is on a known breach list"
                  },
                  "width": {
                    "value": 250
                  },
                  "height": {
                    "value": 50
                  }
                },
                "status": "configured",
                "idUnique": "wtpg69jv6u"
              },
              "position": {
                "x": 2198.1237959294094,
                "y": 386.4833047787973
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "0fng27d4hz",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "New Password"
                  }
                },
                "status": "configured",
                "idUnique": "3d6w01qane"
              },
              "position": {
                "x": 1908.2613173453115,
                "y": 386.4833047787973
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "8e3jhf87e1",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#db4332ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Proceed to application"
                  }
                },
                "status": "configured",
                "idUnique": "wzg3zpf8ul"
              },
              "position": {
                "x": 2946.9351989383294,
                "y": 241.5520654867483
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "mh969sm1jm",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "customHTML": {
                    "value": "\n<div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div class=\"signInDiv\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\"> <img class=\"companyLogo align-self-center mb-5\" alt=\"__COMPANY_NAME__\" />\n               <div id=\"error-wrap\"><p class=\"text-danger mdi mdi-alert-circle\" id=\"error-msg\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p></div>\n                <form id=\"usernamePasswordForm\" data-id=\"usernamePasswordForm\">\n                    <div class=\"mb-4 form-floating\"> \n                        <input class=\"form-control\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\"   autocomplete=\"off\" value=\"\" data-id=\"username-input\" />\n                        <label class=\"form-label\" for=\"username\">username</label> </div>\n                      <div id=\"passwordContainer\" class=\"mb-4 form-floating\"> <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\"   autocomplete=\"off\" value=\"\" data-id=\"password-input\" />\n                        <label class=\"form-label\" for=\"password\">password</label> </div>\n                    <div class=\"d-flex flex-column\">\n                        <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\" \n                     data-skbuttontype=\"form-submit\" data-skform=\"usernamePasswordForm\" id=\"btnSignon\" \n                     data-skbuttonvalue=\"SIGNON\"> Sign On  </button> \n                       <button type=\"submit\" class=\"btn btn-link\" data-skcomponent=\"skbutton\" data-skbuttontype=\"next-event\" data-skform=\"usernamePasswordForm\" id=\"btnForgotPassword\"  data-skbuttonvalue=\"FORGOTPASSWORD\">  \n                            Forgot Password?        \n                         </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "username",
                        "displayName": "Username",
                        "hashedVisibility": false,
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"username\",\n        \"data\": \"{{global.variables.username}}\",\n        \"tooltip\": \"{{global.variables.username}}\",\n        \"children\": [\n          {\n            \"text\": \"username\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "password",
                        "displayName": "Password",
                        "hashedVisibility": false,
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue"
                      },
                      {
                        "propertyName": "riskfp",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": false,
                        "displayName": "Risk Browser FingerPrint"
                      },
                      {
                        "propertyName": "other",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": false
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Username/Password Form"
                  },
                  "customCSS": {
                    "value": ".companyLogo {\n    /* Ping Logo  */\n    content: url(\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\");\n    width: 65px;\n    height: 65px;\n  }\n\n.mainDiv {\n    max-width: 400px; \n    min-width: 400px;\n    width: 100%\n}\n\n/* Break out into individual classes as needed */\n.magicLinkDiv,\n.otpDiv,\n.signInDiv,\n.successDiv,\n.totpDiv,\n.registrationDiv{\n    max-width: 400px; \n    min-width: 400px;\n    width: 100%\n}\n\n.deviceSelectionDiv {\n    max-width: 500px; \n    min-width: 500px;\n    width: 100%\n}"
                  },
                  "validationRules": {
                    "value": []
                  },
                  "backgroundColor": {
                    "value": "#afd5ffff"
                  },
                  "customScript": {
                    "value": "const errorDiv = document.getElementById('error-wrap');\nif(window.addEventListener) {\n  // Normal browsers\n  errorDiv.addEventListener(\"DOMSubtreeModified\", addCustomErrorMessage, false);\n} else if(window.attachEvent) {\n  // IE\n  errorDiv.attachEvent(\"DOMSubtreeModified\", addCustomErrorMessage);\n}\n\nfunction addCustomErrorMessage() {\n  const errorMsg = document.getElementById(\"error-msg\");\n\n  if (errorMsg) {\n    switch(errorMsg.innerText) {\n      case \"Password should NOT be shorter than 4 characters.\":\n        errorMsg.innerText = \"Your password must contain at least 4 characters.\";\n        break;\n      default:\n        // leave message as-is\n    }\n  }\n}\n\nfunction makePasswordToggle(id) {\n  var container = document.getElementById(id);\n  var password = container.getElementsByTagName(\"input\")[0];\n  var toggler = document.createElement(\"button\");\n  toggler.setAttribute(\"type\", \"button\");\n  toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n  toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n  container.appendChild(toggler);\n\n  function showHidePassword() {\n    if (password.type == \"password\") {\n      password.setAttribute(\"type\", \"text\");\n      toggler.classList.add(\"mdi-eye-outline\");\n      toggler.classList.remove(\"mdi-eye-off-outline\");\n    } else {\n      toggler.classList.add(\"mdi-eye-off-outline\");\n      toggler.classList.remove(\"mdi-eye-outline\");\n      password.setAttribute(\"type\", \"password\");\n    }\n    password.focus();\n  };\n\n  toggler.addEventListener(\"click\", showHidePassword);\n}\n\nfunction start() {\n  makePasswordToggle(\"passwordContainer\");\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}\n\n"
                  }
                },
                "idUnique": "3o6qjxe28p"
              },
              "position": {
                "x": 289.86247858409797,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "c1e2iblr2q",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 410.6385113274721,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "mw112sa73u",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "title": {
                    "value": "Recover Password"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "propertyName": "newPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "New Password"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue",
                        "hashedVisibility": false
                      },
                      {
                        "propertyName": "verifyNewPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "Verify New Password"
                      }
                    ]
                  },
                  "nextButtonText": {
                    "value": "Sign On"
                  },
                  "nodeTitle": {
                    "value": "New Password Form"
                  },
                  "customHTML": {
                    "value": "<div    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"{{global.variables.companyName}}\" />\n                <h1 class=\"text-center mb-4\">Change Password</h1>\n                <p class=\"text-muted\">Your password must be changed. Please enter a new one.</p>\n                <div id=\"error-wrap\"><p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" id=\"error-msg\" data-skcomponent=\"skerror\"></p></div>\n               \n                 <div class=\"text-block branding-template-primary-text\" data-id=\"sub-text\" style=\"padding-bottom: 10px;\"> \n                    \n\n                \n\n                <form class=\"form\" id='recoveryCodeForm' data-id=\"recoveryCodeForm\">\n\n                    <div class=\"d-flex flex-column\">\n                        <div id=\"newPasswordContainer\" class=\"mb-4 form-floating\">\n                            <input class=\"form-control\" type=\"password\" id=\"newPassword\" name=\"newPassword\" placeholder=\"newPassword\" autocomplete=\"off\" value=\"\" data-id=\"newPassword-input\" />\n                            <label class=\"form-label\" for=\"newPassword\">New Password</label>\n                        </div>\n                        <div id=\"verifyPasswordContainer\" class=\"mb-4 form-floating\">\n                            <input class=\"form-control\" type=\"password\" id=\"verifyNewPassword\" name=\"verifyNewPassword\" placeholder=\"verifyNewPassword\" autocomplete=\"off\" value=\"\" data-id=\"verifyNewPassword-input\" />\n                            <label class=\"form-label\" for=\"newPassword\">Verify New Password</label>\n                        </div>\n                        <button data-id=\"submit-button\" type=\"submit\" class=\"btn btn-primary mb-3\"\n                                        data-skcomponent=\"skbutton\" data-skbuttontype=\"form-submit\" data-skform=\"recoveryCodeForm\"\n                                        data-skbuttonvalue=\"SUBMIT\" id=\"submit\">\n                                       Submit\n                                    </button>\n                    </div>\n\n                </form>\n            </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n"
                  },
                  "customCSS": {},
                  "backgroundColor": {
                    "value": "#afd5ffff"
                  },
                  "validationRules": {
                    "value": []
                  },
                  "customScript": {
                    "value": "const errorDiv = document.getElementById('error-wrap');\nif(window.addEventListener) {\n  // Normal browsers\n  errorDiv.addEventListener(\"DOMSubtreeModified\", addCustomErrorMessage, false);\n} else if(window.attachEvent) {\n  // IE\n  errorDiv.attachEvent(\"DOMSubtreeModified\", addCustomErrorMessage);\n}\n\nfunction addCustomErrorMessage() {\n  const errorMsg = document.getElementById(\"error-msg\");\n\n  if (errorMsg) {\n    switch(errorMsg.innerText) {\n      case \"NewPassword should NOT be shorter than 4 characters.\":\n        errorMsg.innerText = \"Your new password must contain at least 4 characters.\";\n        break;\n      default:\n        // leave message as-is\n    }\n  }\n}\n\nfunction makePasswordToggle(id) {\n  var container = document.getElementById(id);\n  var password = container.getElementsByTagName(\"input\")[0];\n  var toggler = document.createElement(\"button\");\n  toggler.setAttribute(\"type\", \"button\");\n  toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n  toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n  container.appendChild(toggler);\n\n  function showHidePassword() {\n    if (password.type == \"password\") {\n      password.setAttribute(\"type\", \"text\");\n      toggler.classList.add(\"mdi-eye-outline\");\n      toggler.classList.remove(\"mdi-eye-off-outline\");\n    } else {\n      toggler.classList.add(\"mdi-eye-off-outline\");\n      toggler.classList.remove(\"mdi-eye-outline\");\n      password.setAttribute(\"type\", \"password\");\n    }\n    password.focus();\n  };\n\n  toggler.addEventListener(\"click\", showHidePassword);\n}\n\nfunction start() {\n  makePasswordToggle(\"newPasswordContainer\");\n  makePasswordToggle(\"verifyPasswordContainer\");\n  focusOnFirstInputElement();\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}\n"
                  }
                },
                "isDisabled": false,
                "idUnique": "wcst4qhzpt"
              },
              "position": {
                "x": 1980.726936991336,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "3pbuotygvv",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 2149.8133828320597,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ma7yswbw0g",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "title": {
                    "value": "Recover Password"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "propertyName": "newPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "New Password"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue",
                        "hashedVisibility": false
                      },
                      {
                        "propertyName": "verifyNewPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "Verify New Password"
                      }
                    ]
                  },
                  "nextButtonText": {
                    "value": "Sign On"
                  },
                  "nodeTitle": {
                    "value": "Show Breach Password Message"
                  },
                  "customHTML": {
                    "value": "<div    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"{{global.variables.companyName}}\" />\n                <h1 class=\"text-center mb-4\">Change your password</h1>\n                <p class=\"text-muted\">This password has appeared in a data breach and has been seen {{local.1v5mgi6js4.payload.output.breachedCount}} times before.</p>\n\n                <p class=\"text-muted\">Press continue to set a new password</p>\n               \n                 <div class=\"text-block branding-template-primary-text\" data-id=\"sub-text\" style=\"padding-bottom: 10px;\"> \n                    \n\n                \n\n                <form class=\"form\" id='recoveryCodeForm' data-id=\"recoveryCodeForm\">\n\n                    <div class=\"d-flex flex-column\">\n                        \n                        \n                        <button data-id=\"submit-button\" type=\"submit\" class=\"btn btn-primary mb-3\"\n                                        data-skcomponent=\"skbutton\" data-skbuttontype=\"form-submit\" data-skform=\"recoveryCodeForm\"\n                                        data-skbuttonvalue=\"SUBMIT\" id=\"submit\">\n                                       Continue\n                                    </button>\n                    </div>\n\n                </form>\n            </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n"
                  },
                  "customCSS": {},
                  "backgroundColor": {
                    "value": "#afd5ffff"
                  },
                  "validationRules": {
                    "value": []
                  },
                  "customScript": {
                    "value": "const errorDiv = document.getElementById('error-wrap');\nif(window.addEventListener) {\n  // Normal browsers\n  errorDiv.addEventListener(\"DOMSubtreeModified\", addCustomErrorMessage, false);\n} else if(window.attachEvent) {\n  // IE\n  errorDiv.attachEvent(\"DOMSubtreeModified\", addCustomErrorMessage);\n}\n\nfunction addCustomErrorMessage() {\n  const errorMsg = document.getElementById(\"error-msg\");\n\n  if (errorMsg) {\n    switch(errorMsg.innerText) {\n      case \"NewPassword should NOT be shorter than 4 characters.\":\n        errorMsg.innerText = \"Your new password must contain at least 4 characters.\";\n        break;\n      default:\n        // leave message as-is\n    }\n  }\n}\n\nfunction makePasswordToggle(id) {\n  var container = document.getElementById(id);\n  var password = container.getElementsByTagName(\"input\")[0];\n  var toggler = document.createElement(\"button\");\n  toggler.setAttribute(\"type\", \"button\");\n  toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n  toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n  container.appendChild(toggler);\n\n  function showHidePassword() {\n    if (password.type == \"password\") {\n      password.setAttribute(\"type\", \"text\");\n      toggler.classList.add(\"mdi-eye-outline\");\n      toggler.classList.remove(\"mdi-eye-off-outline\");\n    } else {\n      toggler.classList.add(\"mdi-eye-off-outline\");\n      toggler.classList.remove(\"mdi-eye-outline\");\n      password.setAttribute(\"type\", \"password\");\n    }\n    password.focus();\n  };\n\n  toggler.addEventListener(\"click\", showHidePassword);\n}\n\nfunction start() {\n  makePasswordToggle(\"newPasswordContainer\");\n  makePasswordToggle(\"verifyPasswordContainer\");\n  focusOnFirstInputElement();\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}\n"
                  }
                },
                "isDisabled": false,
                "idUnique": "0n26zn2vs2"
              },
              "position": {
                "x": 1715.019664955913,
                "y": 483.1041309734966
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "bcavurwqlw",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "title": {
                    "value": "Recover Password"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "propertyName": "newPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "New Password"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue",
                        "hashedVisibility": false
                      },
                      {
                        "propertyName": "verifyNewPassword",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "",
                        "hashedVisibility": true,
                        "displayName": "Verify New Password"
                      }
                    ]
                  },
                  "nextButtonText": {
                    "value": "Sign On"
                  },
                  "nodeTitle": {
                    "value": "Login Success"
                  },
                  "customHTML": {
                    "value": "<div    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"{{global.variables.companyName}}\" />\n                <h1 class=\"text-center mb-4\">Login Success</h1>\n                <p class=\"text-muted\">Login success! User will continue to application.</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n"
                  },
                  "customCSS": {},
                  "backgroundColor": {
                    "value": "#afd5ffff"
                  },
                  "validationRules": {
                    "value": []
                  },
                  "customScript": {
                    "value": "const errorDiv = document.getElementById('error-wrap');\nif(window.addEventListener) {\n  // Normal browsers\n  errorDiv.addEventListener(\"DOMSubtreeModified\", addCustomErrorMessage, false);\n} else if(window.attachEvent) {\n  // IE\n  errorDiv.attachEvent(\"DOMSubtreeModified\", addCustomErrorMessage);\n}\n\nfunction addCustomErrorMessage() {\n  const errorMsg = document.getElementById(\"error-msg\");\n\n  if (errorMsg) {\n    switch(errorMsg.innerText) {\n      case \"NewPassword should NOT be shorter than 4 characters.\":\n        errorMsg.innerText = \"Your new password must contain at least 4 characters.\";\n        break;\n      default:\n        // leave message as-is\n    }\n  }\n}\n\nfunction makePasswordToggle(id) {\n  var container = document.getElementById(id);\n  var password = container.getElementsByTagName(\"input\")[0];\n  var toggler = document.createElement(\"button\");\n  toggler.setAttribute(\"type\", \"button\");\n  toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n  toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n  container.appendChild(toggler);\n\n  function showHidePassword() {\n    if (password.type == \"password\") {\n      password.setAttribute(\"type\", \"text\");\n      toggler.classList.add(\"mdi-eye-outline\");\n      toggler.classList.remove(\"mdi-eye-off-outline\");\n    } else {\n      toggler.classList.add(\"mdi-eye-off-outline\");\n      toggler.classList.remove(\"mdi-eye-outline\");\n      password.setAttribute(\"type\", \"password\");\n    }\n    password.focus();\n  };\n\n  toggler.addEventListener(\"click\", showHidePassword);\n}\n\nfunction start() {\n  makePasswordToggle(\"newPasswordContainer\");\n  makePasswordToggle(\"verifyPasswordContainer\");\n  focusOnFirstInputElement();\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}\n"
                  }
                },
                "isDisabled": false,
                "idUnique": "dri7d4ny5l"
              },
              "position": {
                "x": 3043.5560251330285,
                "y": 314.0176851327728
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            }
          ],
          "edges": [
            {
              "data": {
                "id": "xt0vfkh6b",
                "source": "jx3vywz9f0",
                "target": "1v5mgi6js4"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "v8vk70x5f4",
                "source": "y42qbqdfi3",
                "target": "mw112sa73u"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "7runcriof6",
                "source": "mw112sa73u",
                "target": "3pbuotygvv"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "nylkk2eq5q",
                "source": "1v5mgi6js4",
                "target": "17d6lzy7sa"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "pyekeoa0e6",
                "source": "mh969sm1jm",
                "target": "c1e2iblr2q"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "pog3hdrepd",
                "source": "3428uvmhlr",
                "target": "iq4dze9bpl"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "w31klii8bp",
                "source": "ma7yswbw0g",
                "target": "y42qbqdfi3"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "m7hhpbaio0",
                "source": "ryoojrq8bc",
                "target": "ic3tdrjr7i"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "k30ylh64xp",
                "source": "3pbuotygvv",
                "target": "ryoojrq8bc"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "w897jea7k7",
                "source": "ic3tdrjr7i",
                "target": "9nphei31u9"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "t7wnstkksh",
                "source": "17d6lzy7sa",
                "target": "ma7yswbw0g"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "374thmwphf",
                "source": "ic3tdrjr7i",
                "target": "3428uvmhlr"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "1lzjji43ei",
                "source": "c1e2iblr2q",
                "target": "30yei94sd6"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "sj1ue0zota",
                "source": "30yei94sd6",
                "target": "kvn5j3wgha"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "7d59nlj9hh",
                "source": "kvn5j3wgha",
                "target": "s2jwc187lt"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "9b3x8hqeh6",
                "source": "s2jwc187lt",
                "target": "gthvahikrb",
                "multiValueSourceId": "v4cwh74pow"
              },
              "position": {
                "x": 64,
                "y": 52
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "b9cj6s4787",
                "source": "gthvahikrb",
                "target": "saz3okakg1"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "oidp5hi2dp",
                "source": "saz3okakg1",
                "target": "jx3vywz9f0"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "2hjkq7i5ny",
                "source": "jx3vywz9f0",
                "target": "vr85os8gfj"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "oybvrq9tk8",
                "source": "iq4dze9bpl",
                "target": "bcavurwqlw"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "xd1r3dwqj0",
                "source": "17d6lzy7sa",
                "target": "bcavurwqlw"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            }
          ]
        },
        "data": {},
        "zoomingEnabled": true,
        "userZoomingEnabled": true,
        "zoom": 1,
        "minZoom": 1e-50,
        "maxZoom": 1e50,
        "panningEnabled": true,
        "userPanningEnabled": true,
        "pan": {
          "x": 0,
          "y": 0
        },
        "boxSelectionEnabled": true,
        "renderer": {
          "name": "null"
        }
      },
      "flowColor": "#ff661c",
      "savedDate": 1727453643281,
      "variables": [
        {
          "context": "flowInstance",
          "createdDate": 1725383755748,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "da9828be-8248-4dd9-8ff7-54fed661722a",
          "type": "property",
          "visibility": "private",
          "name": "companyName##SK##flowInstance",
          "companyId": "e7b8a85c-34e2-414c-9524-b3eb8b45b0f2"
        },
        {
          "context": "flowInstance",
          "createdDate": 1725383759997,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "a5948d33-bcdd-471c-aec8-09510685fa18",
          "type": "property",
          "visibility": "private",
          "name": "username##SK##flowInstance",
          "companyId": "e7b8a85c-34e2-414c-9524-b3eb8b45b0f2"
        }
      ],
      "connections": [],
      "parentFlowId": "016d8b91258f0a3921a94cb0dd9ece71"
    },
    {
      "companyId": "a7b8a85c-34e2-414c-9524-b3eb8b45b0f5",
      "authTokenExpireIds": [],
      "connectorIds": ["functionsConnector", "httpConnector"],
      "createdDate": 1727373565192,
      "currentVersion": 12,
      "customerId": "e0217666584e370d39d052df8a349869",
      "description": "Used to check if user password has been found in a known breach.",
      "flowStatus": "enabled",
      "inputSchemaCompiled": {
        "parameters": {
          "type": "object",
          "properties": {
            "password": {
              "description": "password to validate",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "password"
            }
          },
          "additionalProperties": false,
          "required": ["password"]
        }
      },
      "isInputSchemaSaved": true,
      "isOutputSchemaSaved": false,
      "name": "Subflow - Have I Been Pwned",
      "publishedVersion": 11,
      "settings": {
        "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
        "intermediateLoadingScreenCSS": "",
        "intermediateLoadingScreenHTML": "",
        "scrubSensitiveInfo": true,
        "logLevel": 2,
        "sensitiveInfoFields": ["password"]
      },
      "timeouts": "null",
      "flowId": "f133c8615794355e6c3e9ea7930d919a",
      "versionId": 12,
      "graphData": {
        "elements": {
          "nodes": [
            {
              "data": {
                "id": "5sazvevm7h",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "digestMessage",
                "type": "trigger",
                "properties": {
                  "digestAlgorithm": {
                    "value": "sha1"
                  },
                  "message": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"password\",\n        \"data\": \"{{global.parameters.password}}\",\n        \"tooltip\": \"{{global.parameters.password}}\",\n        \"children\": [\n          {\n            \"text\": \"password\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Hash Password"
                  },
                  "nodeDescription": {
                    "value": "Converts the string password into an SHA1 hashed password"
                  }
                }
              },
              "position": {
                "x": 304,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "o09kczar9z",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 424,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "3wengie62s",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "code": {
                    "value": "// Write your code here\n// Supported language: Javascript \nmodule.exports = a = async ({params}) => {\n\tvar hashPrefix = params.password_hash.substring(0, 5);\n\treturn {'hashPrefix': hashPrefix}\n}"
                  },
                  "outputSchema": {
                    "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"hashPrefix\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}"
                  },
                  "variableInputList": {
                    "value": [
                      {
                        "name": "password_hash",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"hash\",\n        \"data\": \"{{local.5sazvevm7h.payload.output.hash}}\",\n        \"tooltip\": \"{{local.5sazvevm7h.payload.output.hash}}\",\n        \"children\": [\n          {\n            \"text\": \"hash\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Get Hash Prefix"
                  },
                  "nodeDescription": {
                    "value": "Returns the first 5 characters of the password hash"
                  }
                }
              },
              "position": {
                "x": 574,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "222tk4z8ri",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 694,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "uy9swtx9su",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "makeRestApiCall",
                "type": "trigger",
                "properties": {
                  "url": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://api.pwnedpasswords.com/range/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"hashPrefix\",\n        \"data\": \"{{local.3wengie62s.payload.output.hashPrefix}}\",\n        \"tooltip\": \"{{local.3wengie62s.payload.output.hashPrefix}}\",\n        \"children\": [\n          {\n            \"text\": \"hashPrefix\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Pwned API Call"
                  },
                  "nodeDescription": {
                    "value": "Make a GET request to Pwned to check the password for known breaches."
                  },
                  "timeout": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"2000\"\n      }\n    ]\n  }\n]"
                  }
                }
              },
              "position": {
                "x": 844,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "iswqijtzyn",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 964,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "z9mcmbnodx",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "variableInputList": {
                    "value": [
                      {
                        "name": "password_hash",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"hash\",\n        \"data\": \"{{local.5sazvevm7h.payload.output.hash}}\",\n        \"tooltip\": \"{{local.5sazvevm7h.payload.output.hash}}\",\n        \"children\": [\n          {\n            \"text\": \"hash\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "pwned_response",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"body\",\n        \"data\": \"{{local.uy9swtx9su.payload.output.rawResponse.body}}\",\n        \"tooltip\": \"{{local.uy9swtx9su.payload.output.rawResponse.body}}\",\n        \"children\": [\n          {\n            \"text\": \"body\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "code": {
                    "value": "// Write your code here\n// Supported language: Javascript \nmodule.exports = a = async ({params}) => {\n\t// Retrieve the password hash removing the first 5 characters. \n\t//The response from the API call is a list of hashes along with a numeric value which is the number of breaches.\n\t// ie: 0018A45C4DEF81644B53AB8F969B88D65:1\n\t//     001HBDKEHBDK38D84LBJ39ALIH933938D:389\n\tvar hashSubstring = params.password_hash.substring(5, params.password_hash.length)\n\n\t// Split list into loopable format\n\tvar pwnedResponseList = params.pwned_response.split('\\r\\n')\n\t\n\t// Set breachCount to 0 by default\n\tvar breachedCount = 0;\n\n\t// Loop though the response list and find the related item (if any) and retrieve the breach count.\n\tfor (let i = 0; i < pwnedResponseList.length; i++) {\n\t\t// select current item in iteration\n\t\tvar pwnedItem = pwnedResponseList[i];\n\t\t// separate hash from breach count - ie: (left half)001HBDKEHBDK38D84LBJ39ALIH933938D:389(right half)\n\t\tvar pwnedSplitList = pwnedItem.split(':')\n\n\t\t// Check if the left half of the current item equals the hash suffix of the password.\n\t\tif (pwnedSplitList[0].toLowerCase() == hashSubstring.toLowerCase()) {\n\t\t\t// Password was found in a breach, set breachCount value to equal the right half of current item.\n\t\t\tbreachedCount = pwnedSplitList[1];\n\t\t\tbreak;\n\t\t}\n\n\t}\n\t\n\treturn {'breachedCount': breachedCount}\n}"
                  },
                  "outputSchema": {
                    "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"breachedCount\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}"
                  },
                  "nodeTitle": {
                    "value": "Validate Password"
                  },
                  "nodeDescription": {
                    "value": "Check the known breaches to see if current password is found."
                  }
                }
              },
              "position": {
                "x": 1114,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "a86fx3ku9x",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 1234,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "uusws4ntc8",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "AGreaterThanB",
                "type": "trigger",
                "properties": {
                  "leftValueA": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"breachedCount\",\n        \"data\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"tooltip\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"children\": [\n          {\n            \"text\": \"breachedCount\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "rightValueB": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"0\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Password Found in Breach"
                  },
                  "nodeDescription": {
                    "value": "If breachCount is greater than 0, password was found in a breach."
                  }
                }
              },
              "position": {
                "x": 1384,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "8nkt0us9c0",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "zdnmhyhuug": {
                    "value": "allTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1504,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "zdnmhyhuug",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "createSuccessResponse",
                "type": "action",
                "properties": {
                  "returnRequestParameters": {
                    "value": false
                  },
                  "backgroundColor": {
                    "value": "#9dc967ff"
                  },
                  "claimsNameValuePairs": {
                    "value": [
                      {
                        "name": "breachedCount",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"breachedCount\",\n        \"data\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"tooltip\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"children\": [\n          {\n            \"text\": \"breachedCount\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.39686762137172615,
                        "label": "breachedCount (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "breachedCount"
                      },
                      {
                        "name": "success",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"true\"\n      }\n    ]\n  }\n]",
                        "key": 0.08819048209636637,
                        "label": "success (boolean - flowInstance)",
                        "type": "boolean"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "SUCCESS"
                  },
                  "nodeDescription": {}
                }
              },
              "position": {
                "x": 1654,
                "y": 484
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "j6q5pk10ci",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "createErrorResponse",
                "type": "action",
                "properties": {
                  "claimsNameValuePairs": {
                    "value": [
                      {
                        "name": "breachedCount",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"breachedCount\",\n        \"data\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"tooltip\": \"{{local.z9mcmbnodx.payload.output.breachedCount}}\",\n        \"children\": [\n          {\n            \"text\": \"breachedCount\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.5620701433703443,
                        "label": "breachedCount (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "breachedCount"
                      },
                      {
                        "name": "success",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"false\"\n      }\n    ]\n  }\n]",
                        "key": 0.5169920873583971,
                        "label": "success (boolean - flowInstance)",
                        "type": "boolean"
                      }
                    ]
                  },
                  "returnRequestParameters": {
                    "value": false
                  },
                  "nodeTitle": {
                    "value": "PASSWORD INVALID"
                  },
                  "backgroundColor": {
                    "value": "#e63f54ff"
                  }
                }
              },
              "position": {
                "x": 1654,
                "y": 604
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            }
          ],
          "edges": [
            {
              "data": {
                "id": "1nlevqul8y",
                "source": "uy9swtx9su",
                "target": "iswqijtzyn"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "a33dbir6dt",
                "source": "uy9swtx9su",
                "target": "iswqijtzyn"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "kkn3n7d45g",
                "source": "5sazvevm7h",
                "target": "o09kczar9z"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "r6187r4hrz",
                "source": "o09kczar9z",
                "target": "3wengie62s"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "i18jh0zt4m",
                "source": "3wengie62s",
                "target": "222tk4z8ri"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "ca0dvb7m6e",
                "source": "222tk4z8ri",
                "target": "uy9swtx9su"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "b3tuhac65h",
                "source": "uy9swtx9su",
                "target": "iswqijtzyn"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "r15jamx12d",
                "source": "iswqijtzyn",
                "target": "z9mcmbnodx"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "7atk3j97f1",
                "source": "z9mcmbnodx",
                "target": "a86fx3ku9x"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "4p10jkqsjl",
                "source": "a86fx3ku9x",
                "target": "uusws4ntc8"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "nr0oai9o49",
                "source": "uusws4ntc8",
                "target": "8nkt0us9c0"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "fj7vxxmicn",
                "source": "8nkt0us9c0",
                "target": "zdnmhyhuug"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "5web5g0ewb",
                "source": "8nkt0us9c0",
                "target": "j6q5pk10ci"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            }
          ]
        },
        "data": {},
        "zoomingEnabled": true,
        "userZoomingEnabled": true,
        "zoom": 1,
        "minZoom": 1e-50,
        "maxZoom": 1e50,
        "panningEnabled": true,
        "userPanningEnabled": true,
        "pan": {
          "x": 0,
          "y": 0
        },
        "boxSelectionEnabled": true,
        "renderer": {
          "name": "null"
        }
      },
      "inputSchema": [
        {
          "propertyName": "password",
          "description": "password to validate",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        }
      ],
      "flowColor": "#E3F0FF",
      "savedDate": 1727373565112,
      "variables": []
    }
  ],
  "companyId": "a7b8a85c-34e2-414c-9524-b3eb8b45b0f5",
  "customerId": "e0217666584e370d39d052df8a349869"
}
